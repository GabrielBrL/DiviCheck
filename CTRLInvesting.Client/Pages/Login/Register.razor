@layout LoginLayout
@page "/register"

@inject ISnackbar Snackbar
@inject FluentValidationRegisterUsuario formValid
@inject NavigationManager _nav
@inject IUsuarioService _userService

@using System.ComponentModel.DataAnnotations
@using Model.Usuario
@using Validations

<MudForm Model="@model" @ref="@form" Disabled="@loading" Validation="formValid.ValidateValue" ValidationDelay="0">
    <MudGrid Justify="Justify.Center">
        <MudItem xs="12">
            <MudCard>
                <MudCardContent>
                    <MudTextField Label="Usuário" HelperText="Max. 100 caracteres" @bind-Value="model.Usuario"
                        For="@(() => model.Usuario)" />
                    <MudTextField Label="Email" HelperText="exemplo@exemplo.com" Class="mt-3" @bind-Value="model.Email"
                        For="@(() => model.Email)" />
                    <MudTextField Label="Senha" HelperText="Max. 20 caracteres" Class="mt-3"
                        @bind-Value="model.Password" For="@(() => model.Password)" InputType="InputType.Password" />
                    <MudTextField Label="Confirme a senha" HelperText="Repita a senha" Class="mt-3"
                        @bind-Value="model.ConfirmPassword" For="@(() => model.ConfirmPassword)"
                        InputType="InputType.Password" />
                </MudCardContent>
                <MudCardActions>
                    <MudButton Variant="Variant.Filled" Color="Color.Success" Class="ml-auto" Disabled="@loading"
                        OnClick="@(async () => await OnValidSubmit())">Cadastrar</MudButton>
                    <MudSpacer />
                    <MudButton ButtonType="MudBlazor.ButtonType.Button" OnClick='(() => _nav.NavigateTo("/"))' Disabled="@loading"
                        Variant="Variant.Filled" Class="ml-auto">Voltar</MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>
    </MudGrid>
</MudForm>
@if (loading)
{
    <MudProgressLinear Color="Color.Default" Indeterminate="true" Class="my-7" />
}
@code {
    MudForm form;
    private Snackbar? _snackBar;
    RegisterModel model = new RegisterModel();
    private bool loading = false;
    private async Task OnValidSubmit()
    {
        loading = true;
        await form.Validate();
        if (form.IsValid)
        {
            var result = await _userService.Register(model);
            if (result != "Erro")
            {
                _snackBar = Snackbar.Add($"Bem vindo(a) {result}, por favor faça o login.", Severity.Success, opt =>
                {
                    opt.ShowCloseIcon = true;
                    opt.VisibleStateDuration = int.MaxValue;

                });
                _nav.NavigateTo("/login");
                return;
            }
        }        
        loading = false;
    }

}